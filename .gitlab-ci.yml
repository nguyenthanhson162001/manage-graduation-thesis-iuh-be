stages:
    - test_main
    - publish_proxy
    - deploy_proxy
    - publish_lecturer
    - deploy_lecturer
    - publish_student
    - deploy_student

variables:
    TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

test_main:
    image: docker:latest
    stage: test_main
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    script:
        - docker build -t $TAG_COMMIT_PROXY -f Dockerfile.proxy .
    only:
        - master

publish_proxy:
    image: docker:latest
    stage: publish_proxy
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    script:
        - docker build -t $TAG_COMMIT_PROXY -f Dockerfile.proxy .
        - docker push $TAG_COMMIT_PROXY
    only:
        - master-proxy

deploy_proxy:
    image: docker:latest
    stage: deploy_proxy
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
        - eval $(ssh-agent -s)

    script:
        - chmod og= $ID_RSA
        - apk add --no-cache --upgrade bash
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "ls"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD""
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT_PROXY:latest"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f iuh-v2-proxy || true"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 80:3000 --name iuh-v2-proxy $TAG_COMMIT_PROXY"
    environment:
        name: production
    only:
        - master-proxy

publish_lecturer:
    image: docker:latest
    stage: publish_lecturer
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    script:
        - docker build -t $TAG_COMMIT_LECTURER -f Dockerfile.lecturer .
        - docker push $TAG_COMMIT_LECTURER
    only:
        - master-lecturer

deploy_lecturer:
    image: docker:latest
    stage: deploy_lecturer
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
        - eval $(ssh-agent -s)

    script:
        - chmod og= $ID_RSA
        - apk add --no-cache --upgrade bash
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "ls"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD""
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT_LECTURER:latest"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f iuh-v2-lecturer || true"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3002:3002 --name iuh-v2-lecturer $TAG_COMMIT_LECTURER"
    environment:
        name: production
    only:
        - master-lecturer

publish_student:
    image: docker:latest
    stage: publish_student
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    script:
        - docker build -t $TAG_COMMIT_STUDENT -f Dockerfile.student .
        - docker push $TAG_COMMIT_STUDENT
    only:
        - master-student

deploy_student:
    image: docker:latest
    stage: deploy_student
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
        - eval $(ssh-agent -s)

    script:
        - chmod og= $ID_RSA
        - apk add --no-cache --upgrade bash
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "ls"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD""
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT_STUDENT:latest"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f iuh-v2-student || true"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3001:3001 --name iuh-v2-student $TAG_COMMIT_STUDENT"
    environment:
        name: production
    only:
        - master-student
