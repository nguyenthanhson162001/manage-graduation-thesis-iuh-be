stages:
    # - publish_proxy
    - deploy_proxy

variables:
    TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

# publish_proxy:
#     image: docker:latest
#     stage: publish_proxy
#     services:
#         - docker:dind
#     before_script:
#         - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
#     script:
#         - docker build -t $TAG_COMMIT_PROXY -f Dockerfile.proxy .
#         - docker push $TAG_COMMIT_PROXY
#     only:
#         - master-proxy

deploy_proxy:
    image: docker:latest
    stage: deploy_proxy
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
        - eval $(ssh-agent -s)

    script:
        - chmod og= $ID_RSA
        - apk add --no-cache --upgrade bash
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "ls"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT_PROXY"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f iuh-v2-proxy || true"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3000:3000 --name iuh-v2-proxy $TAG_COMMIT_PROXY"
    environment:
        name: production
    only:
        - master-proxy
